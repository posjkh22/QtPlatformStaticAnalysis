; ModuleID = 'testcase5-1.c'
source_filename = "testcase5-1.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@gv = global i32 1, align 4, !dbg !0
@a = global i32 0, align 4, !dbg !9

; Function Attrs: noinline nounwind optnone uwtable
define i32 @fnc1(i32*) #0 !dbg !15 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  call void @llvm.dbg.declare(metadata i32** %2, metadata !18, metadata !19), !dbg !20
  %3 = load i32*, i32** %2, align 8, !dbg !21
  %4 = bitcast i32* %3 to i8*, !dbg !21
  call void @free(i8* %4) #3, !dbg !22
  ret i32 0, !dbg !23
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define i32 @main() #0 !dbg !24 {
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  store i32 0, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32** %2, metadata !27, metadata !19), !dbg !28
  %3 = call noalias i8* @malloc(i64 4) #3, !dbg !29
  %4 = bitcast i8* %3 to i32*, !dbg !30
  store i32* %4, i32** %2, align 8, !dbg !28
  %5 = load i32*, i32** %2, align 8, !dbg !31
  %6 = call i32 @fnc1(i32* %5), !dbg !32
  ret i32 0, !dbg !33
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!11, !12, !13}
!llvm.ident = !{!14}

!0 = !DIGlobalVariableExpression(var: !1)
!1 = distinct !DIGlobalVariable(name: "gv", scope: !2, file: !3, line: 6, type: !7, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 5.0.0 (tags/RELEASE_500/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !8)
!3 = !DIFile(filename: "testcase5-1.c", directory: "/home/posjkh/ResearchSubjects/QtPlatformAnalysis/QtPlatformStaticAnalysis/02_Calender/Advanced-IPA/TestCases/testcase5")
!4 = !{}
!5 = !{!6}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!0, !9}
!9 = !DIGlobalVariableExpression(var: !10)
!10 = distinct !DIGlobalVariable(name: "a", scope: !2, file: !3, line: 7, type: !7, isLocal: false, isDefinition: true)
!11 = !{i32 2, !"Dwarf Version", i32 4}
!12 = !{i32 2, !"Debug Info Version", i32 3}
!13 = !{i32 1, !"wchar_size", i32 4}
!14 = !{!"clang version 5.0.0 (tags/RELEASE_500/final)"}
!15 = distinct !DISubprogram(name: "fnc1", scope: !3, file: !3, line: 10, type: !16, isLocal: false, isDefinition: true, scopeLine: 10, flags: DIFlagPrototyped, isOptimized: false, unit: !2, variables: !4)
!16 = !DISubroutineType(types: !17)
!17 = !{!7, !6}
!18 = !DILocalVariable(name: "ptr", arg: 1, scope: !15, file: !3, line: 10, type: !6)
!19 = !DIExpression()
!20 = !DILocation(line: 10, column: 15, scope: !15)
!21 = !DILocation(line: 12, column: 7, scope: !15)
!22 = !DILocation(line: 12, column: 2, scope: !15)
!23 = !DILocation(line: 14, column: 2, scope: !15)
!24 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 18, type: !25, isLocal: false, isDefinition: true, scopeLine: 18, isOptimized: false, unit: !2, variables: !4)
!25 = !DISubroutineType(types: !26)
!26 = !{!7}
!27 = !DILocalVariable(name: "ptr", scope: !24, file: !3, line: 20, type: !6)
!28 = !DILocation(line: 20, column: 7, scope: !24)
!29 = !DILocation(line: 20, column: 20, scope: !24)
!30 = !DILocation(line: 20, column: 13, scope: !24)
!31 = !DILocation(line: 22, column: 7, scope: !24)
!32 = !DILocation(line: 22, column: 2, scope: !24)
!33 = !DILocation(line: 24, column: 2, scope: !24)
