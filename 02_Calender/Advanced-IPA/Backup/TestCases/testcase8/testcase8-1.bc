; ModuleID = 'testcase8-1.c'
source_filename = "testcase8-1.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.pthread_attr_t = type { i64, [48 x i8] }

@IntegerGlobalVariable = global i32 3, align 4
@DoubleGlobalVariable = global double 3.500000e+00, align 8
@t1_fnc1.var_t1_func1 = internal global i32 2, align 4
@t2_fnc1.var_t2_func1 = internal global i32 2, align 4
@charGlobal1 = common global i8 0, align 1
@IntegerPointerGV = common global i32* null, align 8
@charGlobal2 = common global i8 0, align 1

; Function Attrs: noinline nounwind optnone uwtable
define void @t1_fnc1(i32*) #0 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = bitcast i32* %3 to i8*
  call void @free(i8* %4) #3
  store i32 3, i32* @t1_fnc1.var_t1_func1, align 4
  ret void
}

; Function Attrs: nounwind
declare void @free(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define void @t2_fnc1(i32*, i32*) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = bitcast i32* %5 to i8*
  call void @free(i8* %6) #3
  %7 = load i32*, i32** %4, align 8
  %8 = bitcast i32* %7 to i8*
  call void @free(i8* %8) #3
  store i32 3, i32* @t2_fnc1.var_t2_func1, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32* @shared_func2(i32*, i32*) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  store double 3.700000e+00, double* @DoubleGlobalVariable, align 8
  %5 = load i32*, i32** %3, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @shared_func1() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %1, align 4
  ret i32 %3
}

; Function Attrs: noinline nounwind optnone uwtable
define void @task1(i8*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %7 = call noalias i8* @malloc(i64 4) #3
  %8 = bitcast i8* %7 to i32*
  store i32* %8, i32** %3, align 8
  %9 = call noalias i8* @malloc(i64 4) #3
  %10 = bitcast i8* %9 to i32*
  store i32* %10, i32** %4, align 8
  %11 = call i32 @shared_func1()
  store i32 1, i32* @IntegerGlobalVariable, align 4
  store i32 0, i32* %6, align 4
  %12 = load i32, i32* %6, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

; <label>:14:                                     ; preds = %1
  %15 = load i32*, i32** %3, align 8
  call void @t1_fnc1(i32* %15)
  br label %24

; <label>:16:                                     ; preds = %1
  %17 = load i32*, i32** %3, align 8
  %18 = load i32*, i32** %4, align 8
  %19 = call i32* @shared_func2(i32* %17, i32* %18)
  store i32* %19, i32** %5, align 8
  %20 = load i32*, i32** %5, align 8
  %21 = bitcast i32* %20 to i8*
  call void @free(i8* %21) #3
  %22 = load i32*, i32** %4, align 8
  %23 = bitcast i32* %22 to i8*
  call void @free(i8* %23) #3
  br label %24

; <label>:24:                                     ; preds = %16, %14
  ret void
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #1

; Function Attrs: noinline nounwind optnone uwtable
define void @task2(i8*) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %7 = call noalias i8* @malloc(i64 4) #3
  %8 = bitcast i8* %7 to i32*
  store i32* %8, i32** %3, align 8
  %9 = call noalias i8* @malloc(i64 4) #3
  %10 = bitcast i8* %9 to i32*
  store i32* %10, i32** %4, align 8
  %11 = call i32 @shared_func1()
  store i32 0, i32* %6, align 4
  %12 = load i32, i32* %6, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %23

; <label>:14:                                     ; preds = %1
  %15 = load i32*, i32** %4, align 8
  store i32* %15, i32** %5, align 8
  %16 = load i32*, i32** %5, align 8
  %17 = bitcast i32* %16 to i8*
  call void @free(i8* %17) #3
  %18 = load i32*, i32** %3, align 8
  %19 = load i32*, i32** %4, align 8
  %20 = call i32* @shared_func2(i32* %18, i32* %19)
  store i32* %20, i32** %5, align 8
  %21 = load i32*, i32** %3, align 8
  %22 = load i32*, i32** %4, align 8
  call void @t2_fnc1(i32* %21, i32* %22)
  br label %30

; <label>:23:                                     ; preds = %1
  %24 = load i32*, i32** %3, align 8
  %25 = bitcast i32* %24 to i8*
  call void @free(i8* %25) #3
  %26 = load i32*, i32** %4, align 8
  %27 = bitcast i32* %26 to i8*
  call void @free(i8* %27) #3
  %28 = load i32*, i32** %4, align 8
  %29 = bitcast i32* %28 to i8*
  call void @free(i8* %29) #3
  br label %30

; <label>:30:                                     ; preds = %23, %14
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [2 x i64], align 16
  store i32 0, i32* %1, align 4
  store i32 0, i32* %5, align 4
  store i32 1, i32* %6, align 4
  %8 = getelementptr inbounds [2 x i64], [2 x i64]* %7, i64 0, i64 0
  %9 = bitcast i32* %5 to i8*
  %10 = call i32 @pthread_create(i64* %8, %union.pthread_attr_t* null, i8* (i8*)* bitcast (void (i8*)* @task1 to i8* (i8*)*), i8* %9) #3
  store i32 %10, i32* %3, align 4
  %11 = getelementptr inbounds [2 x i64], [2 x i64]* %7, i64 0, i64 1
  %12 = bitcast i32* %6 to i8*
  %13 = call i32 @pthread_create(i64* %11, %union.pthread_attr_t* null, i8* (i8*)* bitcast (void (i8*)* @task2 to i8* (i8*)*), i8* %12) #3
  store i32 %13, i32* %4, align 4
  %14 = getelementptr inbounds [2 x i64], [2 x i64]* %7, i64 0, i64 0
  %15 = load i64, i64* %14, align 16
  %16 = bitcast i32* %2 to i8**
  %17 = call i32 @pthread_join(i64 %15, i8** %16)
  %18 = getelementptr inbounds [2 x i64], [2 x i64]* %7, i64 0, i64 1
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i32* %2 to i8**
  %21 = call i32 @pthread_join(i64 %19, i8** %20)
  ret i32 0
}

; Function Attrs: nounwind
declare i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) #1

declare i32 @pthread_join(i64, i8**) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 5.0.0 (tags/RELEASE_500/final)"}
