; ModuleID = 'testcase4-4.c'
source_filename = "testcase4-4.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.file = type { i32 }

@a = global i32 0, align 4
@g_file = common global %struct.file zeroinitializer, align 4
@.str = private unnamed_addr constant [8 x i8] c"file.in\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define %struct.file* @fopen(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i32, i32* @a, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* @a, align 4
  ret %struct.file* @g_file
}

; Function Attrs: noinline nounwind optnone uwtable
define void @fclose(%struct.file*) #0 {
  %2 = alloca %struct.file*, align 8
  store %struct.file* %0, %struct.file** %2, align 8
  %3 = load i32, i32* @a, align 4
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* @a, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @fnc3(%struct.file*) #0 {
  %2 = alloca %struct.file*, align 8
  store %struct.file* %0, %struct.file** %2, align 8
  %3 = load %struct.file*, %struct.file** %2, align 8
  call void @fclose(%struct.file* %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @fnc2(%struct.file*, %struct.file*) #0 {
  %3 = alloca %struct.file*, align 8
  %4 = alloca %struct.file*, align 8
  store %struct.file* %0, %struct.file** %3, align 8
  store %struct.file* %1, %struct.file** %4, align 8
  %5 = load %struct.file*, %struct.file** %3, align 8
  call void @fclose(%struct.file* %5)
  %6 = load %struct.file*, %struct.file** %4, align 8
  call void @fnc3(%struct.file* %6)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define void @fnc1(%struct.file*, %struct.file*) #0 {
  %3 = alloca %struct.file*, align 8
  %4 = alloca %struct.file*, align 8
  %5 = alloca i32, align 4
  store %struct.file* %0, %struct.file** %3, align 8
  store %struct.file* %1, %struct.file** %4, align 8
  store i32 1, i32* %5, align 4
  %6 = call %struct.file* @fopen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0))
  store %struct.file* %6, %struct.file** %4, align 8
  %7 = load %struct.file*, %struct.file** %3, align 8
  %8 = load %struct.file*, %struct.file** %4, align 8
  call void @fnc2(%struct.file* %7, %struct.file* %8)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.file*, align 8
  %3 = alloca %struct.file*, align 8
  store i32 0, i32* %1, align 4
  %4 = call %struct.file* @fopen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0))
  store %struct.file* %4, %struct.file** %2, align 8
  %5 = load %struct.file*, %struct.file** %2, align 8
  %6 = load %struct.file*, %struct.file** %3, align 8
  call void @fnc1(%struct.file* %5, %struct.file* %6)
  store i32 0, i32* @a, align 4
  ret i32 0
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 5.0.0 (tags/RELEASE_500/final)"}
